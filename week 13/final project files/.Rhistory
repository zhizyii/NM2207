group_by(Industry) %>%
summarize(Total_Emissions = sum(c_across(starts_with("20"))))
# Create a bar chart with different fill colors for each industry
ggplot(total_emissions, aes(x = Industry, y = Total_Emissions, fill = Industry)) +
geom_bar(stat = "identity") +
labs(x = "Industry", y = "Total Carbon Dioxide Emissions", fill = "Industry") +
ggtitle("Total Carbon Dioxide Emissions by Industry (2010-2021)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)
# Filter the data for Carbon Dioxide emissions
co2_data <- new_data %>%
filter(Gas_Type == 'Carbon dioxide') %>%
select(-c(Region, Gas_Type))
# Calculate the total emissions for each industry
total_emissions <- co2_data %>%
group_by(Industry) %>%
summarize(Total_Emissions = sum(c_across(starts_with("20"))))
co2_data <- new_data %>%
filter(Gas_Type == 'Carbon dioxide') %>%
select(-c(Region, Gas_Type))
# Calculate the total emissions for each industry
total_emissions <- co2_data %>%
group_by(Industry) %>%
summarize(Total_Emissions = sum(c_across(starts_with("20"))))
# Create a bar chart with different fill colors for each industry
ggplot(total_emissions, aes(x = Industry, y = Total_Emissions, fill = Industry)) +
geom_bar(stat = "identity") +
labs(x = "Industry", y = "Total Carbon Dioxide Emissions", fill = "Industry") +
ggtitle("Total Carbon Dioxide Emissions by Industry (2010-2021)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp4')
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp5')
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp6')
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp6')
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp6')
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp6')
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp6')
setwd("C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp6")
runApp()
runApp()
runApp()
runApp()
new_data
new_data
runApp()
runApp()
runApp()
runApp()
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp7')
runApp()
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp2')
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp2')
runApp('C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io/shinyapp2')
shiny::runApp('shinyapp4')
runApp('shinyapp6')
shiny::runApp('shinyapp6')
runApp('shinyapp6')
View(combined_data_longer)
::: {.panel-tabset}
## Tabset {.tabset}
### Tab 1
This is the content for Tab 1.
## Tabset {.tabset}
### Tab 1
This is the content for Tab 1.
# R code specific to Tab 2
plot(iris$Sepal.Length, iris$Sepal.Width, main = "Scatter Plot")
#| column: screen
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| results: asis
iwalk(plots, ~ {
cat('## ', .y, '\n\n')
print(.x)
cat('\n\n')
})
library(tidyverse)
data <- iris %>% as_tibble()
plots <- data %>%
group_nest(Species) %>%
deframe() %>%
map(., ~ {
ggplot(.x, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
})
#| column: screen
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| results: asis
iwalk(plots, ~ {
cat('## ', .y, '\n\n')
print(.x)
cat('\n\n')
})
head(new_data)
gas_types <- c("Carbon dioxide","Fluorinated gases","Methane","Nitrous oxide")
years <- 2010:2021
#create empty data frame to store the results
combined_data <- data.frame(Year = years)
#loop through each gas type and add the data to combined_data
for (gas_type in gas_types) {
#calculate the sums for each year
results <- sapply(years, function(year) {
#filter the data for the specified year and gas type
filtered_data <- new_data %>%
filter(Gas_Type == gas_type) %>%
summarise(Year = as.integer(year), Total_Emissions = sum(get(as.character(year)))
)
})
result <- t(results)
emissions <- as.numeric(result[,"Total_Emissions"])
combined_data[gas_type] <- emissions
}
combined_data_longer <- combined_data %>%
pivot_longer(cols = -Year, names_to = "Gas_Type", values_to = "Emissions")
#create the plot
ggplot(combined_data_longer, aes(x = Year, y = Emissions, color = Gas_Type)) +
geom_line() +
labs(x = "Year", y = "Emissions (Gas Type)",
color = "Gas Type",
title = "Total Emissions Over the Years by Gas Type",
caption = "Units: Million metric tons of CO2 equivalent")
industries <- unique(new_data$Industry)
years <- 2010:2021
#create empty data frame to store the results
combined_data <- data.frame(Year = years)
#loop through each industry and add the data to combined_data
for (industry in industries) {
#calculate the sums for each year
results <- sapply(years, function(year) {
#filter data for the specified year and industry
filtered_data <- new_data %>%
filter(Industry == industry) %>%
summarise(Year = as.integer(year), Total_Emissions = sum(get(as.character(year)))
)
})
result <- t(results)
emissions <- as.numeric(result[,"Total_Emissions"])
combined_data[industry] <- emissions
}
combined_data_longer <- combined_data %>%
pivot_longer(cols = -Year, names_to = "Industry", values_to = "Emissions")
#create the plot for industries
ggplot(combined_data_longer, aes(x = Year, y = Emissions, color = Industry)) +
geom_line() +
labs(x = "Year", y = "Emissions (Industry)",
color = "Industry",
title="Total Emissions Over the Years by Industry",
caption = "Units: Million metric tons of CO2 equivalent")+
theme(plot.background = element_rect(fill = "#F4F1E8"))
industries <- unique(new_data$Industry)
years <- 2010:2021
#create empty data frame to store the results
combined_data <- data.frame(Year = years)
#loop through each industry and add the data to combined_data
for (industry in industries) {
#calculate the sums for each year
results <- sapply(years, function(year) {
#filter data for the specified year and industry
filtered_data <- new_data %>%
filter(Industry == industry) %>%
summarise(Year = as.integer(year), Total_Emissions = sum(get(as.character(year)))
)
})
result <- t(results)
emissions <- as.numeric(result[,"Total_Emissions"])
combined_data[industry] <- emissions
}
combined_data_longer <- combined_data %>%
pivot_longer(cols = -Year, names_to = "Industry", values_to = "Emissions")
#create the plot for industries
ggplot(combined_data_longer, aes(x = Year, y = Emissions, color = Industry)) +
geom_line() +
labs(x = "Year", y = "Emissions (Industry)",
color = "Industry",
title="Total Emissions Over the Years by Industry",
caption = "Units: Million metric tons of CO2 equivalent")+
theme(plot.background = element_rect(fill = "#F4F1E8"),  # Set the background color of the plot
legend.background = element_rect(fill = "#F4F1E8"))
runApp('shinyapp4')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp2')
runApp('shinyapp4')
runApp('shinyapp6')
runApp('shinyapp3')
install.packages("plotly")
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(plotly)
industries <- unique(new_data$Industry)
years <- 2010:2021
#create empty data frame to store the results
combined_data <- data.frame(Year = years)
#loop through each industry and add the data to combined_data
for (industry in industries) {
#calculate the sums for each year
results <- sapply(years, function(year) {
#filter data for the specified year and industry
filtered_data <- new_data %>%
filter(Industry == industry) %>%
summarise(Year = as.integer(year), Total_Emissions = sum(get(as.character(year)))
)
})
result <- t(results)
emissions <- as.numeric(result[,"Total_Emissions"])
combined_data[industry] <- emissions
}
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(plotly)
#read the csv file
data <- read.csv("Annual_Greenhouse_Gas_(GHG)_Air_Emissions_Accounts.csv")
#we are only using the columns: Country, Industry, Gas_Type, F2010,	F2011,	F2012,	F2013,	F2014,	F2015,	F2016,	F2017,	F2018,	F2019,	F2020,	F2021
#create a new data frame with only the needed columns of suitable names
new_names <- c("Region", "Industry", "Gas_Type", 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021)
new_data <- data %>%
filter(Country %in% c("Africa", "Americas", "Asia", "Europe", "Oceania")) %>%
filter(Industry %in% c("Manufacturing", "Electricity, Gas, Steam and Air Conditioning Supply", "Transportation and Storage", "Agriculture, Forestry and Fishing", "Construction")) %>%
select(Country, Industry, Gas_Type, F2010, F2011, F2012, F2013, F2014, F2015, F2016, F2017, F2018, F2019, F2020, F2021) %>%
setNames(new_names)
head(new_data)
industries <- unique(new_data$Industry)
years <- 2010:2021
#create empty data frame to store the results
combined_data <- data.frame(Year = years)
#loop through each industry and add the data to combined_data
for (industry in industries) {
#calculate the sums for each year
results <- sapply(years, function(year) {
#filter data for the specified year and industry
filtered_data <- new_data %>%
filter(Industry == industry) %>%
summarise(Year = as.integer(year), Total_Emissions = sum(get(as.character(year)))
)
})
result <- t(results)
emissions <- as.numeric(result[,"Total_Emissions"])
combined_data[industry] <- emissions
}
combined_data_longer <- combined_data %>%
pivot_longer(cols = -Year, names_to = "Industry", values_to = "Emissions")
#create the plot for industries
p <- ggplot(combined_data_longer, aes(x = Year, y = Emissions, color = Industry)) +
geom_line() +
labs(x = "Year", y = "Emissions (Industry)",
color = "Industry",
title="Total Emissions Over the Years by Industry",
caption = "Units: Million metric tons of CO2 equivalent")+
theme(plot.background = element_rect(fill = "#F4F1E8"),  # Set the background color of the plot
legend.background = element_rect(fill = "#F4F1E8")) # Set the background color of the legend
plotly_chart <- ggplotly(p)
plotly_chart
shiny::runApp('shinyapp6')
runApp('shinyapp6')
runApp('shinyapp4')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp2')
runApp('shinyapp4')
runApp('shinyapp4')
runApp('shinyapp6')
runApp('shinyapp4')
runApp('shinyapp6')
runApp('shinyapp4')
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(plotly)
library(knitr)
# Display the first few rows of new_data in a table
kable(head(new_data))
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(plotly)
library(knitr)
data <- read.csv("Annual_Greenhouse_Gas_(GHG)_Air_Emissions_Accounts.csv")
#read the csv file
data <- read.csv("Annual_Greenhouse_Gas_(GHG)_Air_Emissions_Accounts.csv")
#we are only using the columns: Country, Industry, Gas_Type, F2010,	F2011,	F2012,	F2013,	F2014,	F2015,	F2016,	F2017,	F2018,	F2019,	F2020,	F2021
#create a new data frame with only the needed columns of suitable names
new_names <- c("Region", "Industry", "Gas_Type", 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021)
new_data <- data %>%
filter(Country %in% c("Africa", "Americas", "Asia", "Europe", "Oceania")) %>%
filter(Industry %in% c("Manufacturing", "Electricity, Gas, Steam and Air Conditioning Supply", "Transportation and Storage", "Agriculture, Forestry and Fishing", "Construction")) %>%
select(Country, Industry, Gas_Type, F2010, F2011, F2012, F2013, F2014, F2015, F2016, F2017, F2018, F2019, F2020, F2021) %>%
setNames(new_names)
runApp('shinyapp4')
runApp('shinyapp4')
shiny::runApp('shinyapp')
gc()
gc()
gc()
#read the csv file
data <- read.csv("Annual_Greenhouse_Gas_(GHG)_Air_Emissions_Accounts.csv")
#we are only using the columns: Country, Industry, Gas_Type, F2010,	F2011,	F2012,	F2013,	F2014,	F2015,	F2016,	F2017,	F2018,	F2019,	F2020,	F2021
#create a new data frame with only the needed columns of suitable names
new_names <- c("Region", "Industry", "Gas_Type", 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021)
new_data <- data %>%
filter(Country %in% c("Africa", "Americas", "Asia", "Europe", "Oceania")) %>%
filter(Industry %in% c("Manufacturing", "Electricity, Gas, Steam and Air Conditioning Supply", "Transportation and Storage", "Agriculture, Forestry and Fishing", "Construction")) %>%
filter(Gas_Type %in% c("Carbon dioxide", "Fluorinated gases", "Methane", "Nitrous oxide")) %>%
select(Country, Industry, Gas_Type, F2010, F2011, F2012, F2013, F2014, F2015, F2016, F2017, F2018, F2019, F2020, F2021) %>%
setNames(new_names)
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(plotly)
library(knitr)
#read the csv file
data <- read.csv("Annual_Greenhouse_Gas_(GHG)_Air_Emissions_Accounts.csv")
#we are only using the columns: Country, Industry, Gas_Type, F2010,	F2011,	F2012,	F2013,	F2014,	F2015,	F2016,	F2017,	F2018,	F2019,	F2020,	F2021
#create a new data frame with only the needed columns of suitable names
new_names <- c("Region", "Industry", "Gas_Type", 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021)
new_data <- data %>%
filter(Country %in% c("Africa", "Americas", "Asia", "Europe", "Oceania")) %>%
filter(Industry %in% c("Manufacturing", "Electricity, Gas, Steam and Air Conditioning Supply", "Transportation and Storage", "Agriculture, Forestry and Fishing", "Construction")) %>%
filter(Gas_Type %in% c("Carbon dioxide", "Fluorinated gases", "Methane", "Nitrous oxide")) %>%
select(Country, Industry, Gas_Type, F2010, F2011, F2012, F2013, F2014, F2015, F2016, F2017, F2018, F2019, F2020, F2021) %>%
setNames(new_names)
industries <- unique(new_data$Industry)
years <- 2010:2021
#create empty data frame to store the results
combined_data <- data.frame(Year = years)
#loop through each industry and add the data to combined_data
for (industry in industries) {
#calculate the sums for each year
results <- sapply(years, function(year) {
#filter data for the specified year and industry
filtered_data <- new_data %>%
filter(Industry == industry) %>%
summarise(Year = as.integer(year), Total_Emissions = sum(get(as.character(year)))
)
})
result <- t(results)
emissions <- as.numeric(result[,"Total_Emissions"])
combined_data[industry] <- emissions
}
combined_data_longer <- combined_data %>%
pivot_longer(cols = -Year, names_to = "Industry", values_to = "Emissions")
#create the plot for industries
p1 <- ggplot(combined_data_longer, aes(x = Year, y = Emissions, color = Industry)) +
geom_line() +
labs(x = "Year", y = "Emissions (Industry)",
color = "Industry",
title="Total Emissions Over the Years by Industry",
caption = "Units: Million metric tons of CO2 equivalent")+
theme(plot.background = element_rect(fill = "#F4F1E8"),  # Set the background color of the plot
legend.background = element_rect(fill = "#F4F1E8")) # Set the background color of the legend
plotly_chart1 <- ggplotly(p1)
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(plotly)
library(knitr)
#read the csv file
data <- read.csv("Annual_Greenhouse_Gas_(GHG)_Air_Emissions_Accounts.csv")
#we are only using the columns: Country, Industry, Gas_Type, F2010,	F2011,	F2012,	F2013,	F2014,	F2015,	F2016,	F2017,	F2018,	F2019,	F2020,	F2021
#create a new data frame with only the needed columns of suitable names
new_names <- c("Region", "Industry", "Gas_Type", 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021)
new_data <- data %>%
filter(Country %in% c("Africa", "Americas", "Asia", "Europe", "Oceania")) %>%
filter(Industry %in% c("Manufacturing", "Electricity, Gas, Steam and Air Conditioning Supply", "Transportation and Storage", "Agriculture, Forestry and Fishing", "Construction")) %>%
filter(Gas_Type %in% c("Carbon dioxide", "Fluorinated gases", "Methane", "Nitrous oxide")) %>%
select(Country, Industry, Gas_Type, F2010, F2011, F2012, F2013, F2014, F2015, F2016, F2017, F2018, F2019, F2020, F2021) %>%
setNames(new_names)
# Display the first few rows of new_data in a table
kable(head(new_data))
#read the csv file
data <- read.csv("Annual_Greenhouse_Gas_(GHG)_Air_Emissions_Accounts.csv")
#we are only using the columns: Country, Industry, Gas_Type, F2010,	F2011,	F2012,	F2013,	F2014,	F2015,	F2016,	F2017,	F2018,	F2019,	F2020,	F2021
#create a new data frame with only the needed columns of suitable names
new_names <- c("Region", "Industry", "Gas_Type", 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021)
new_data <- data %>%
filter(Country %in% c("Africa", "Americas", "Asia", "Europe", "Oceania")) %>%
filter(Industry %in% c("Manufacturing", "Electricity, Gas, Steam and Air Conditioning Supply", "Transportation and Storage", "Agriculture, Forestry and Fishing", "Construction")) %>%
filter(Gas_Type %in% c("Carbon dioxide", "Fluorinated gases", "Methane", "Nitrous oxide")) %>%
select(Country, Industry, Gas_Type, F2010, F2011, F2012, F2013, F2014, F2015, F2016, F2017, F2018, F2019, F2020, F2021) %>%
setNames(new_names)
industries <- unique(new_data$Industry)
years <- 2010:2021
#create empty data frame to store the results
combined_data <- data.frame(Year = years)
#loop through each industry and add the data to combined_data
for (industry in industries) {
#calculate the sums for each year
results <- sapply(years, function(year) {
#filter data for the specified year and industry
filtered_data <- new_data %>%
filter(Industry == industry) %>%
summarise(Year = as.integer(year), Total_Emissions = sum(get(as.character(year)))
)
})
result <- t(results)
emissions <- as.numeric(result[,"Total_Emissions"])
combined_data[industry] <- emissions
}
combined_data_longer <- combined_data %>%
pivot_longer(cols = -Year, names_to = "Industry", values_to = "Emissions")
#create the plot for industries
p1 <- ggplot(combined_data_longer, aes(x = Year, y = Emissions, color = Industry)) +
geom_line() +
labs(x = "Year", y = "Emissions (Industry)",
color = "Industry",
title="Total Emissions Over the Years by Industry",
caption = "Units: Million metric tons of CO2 equivalent")+
theme(plot.background = element_rect(fill = "#F4F1E8"),  # Set the background color of the plot
legend.background = element_rect(fill = "#F4F1E8")) # Set the background color of the legend
plotly_chart1 <- ggplotly(p1)
setwd("C:/zhiyi/NUS/Y2S1 mods/NM2207/zhizyii.github.io")
industries <- unique(new_data$Industry)
years <- 2010:2021
#create empty data frame to store the results
combined_data <- data.frame(Year = years)
#loop through each industry and add the data to combined_data
for (industry in industries) {
#calculate the sums for each year
results <- sapply(years, function(year) {
#filter data for the specified year and industry
filtered_data <- new_data %>%
filter(Industry == industry) %>%
summarise(Year = as.integer(year), Total_Emissions = sum(get(as.character(year)))
)
})
result <- t(results)
emissions <- as.numeric(result[,"Total_Emissions"])
combined_data[industry] <- emissions
}
combined_data_longer <- combined_data %>%
pivot_longer(cols = -Year, names_to = "Industry", values_to = "Emissions")
#create the plot for industries
p1 <- ggplot(combined_data_longer, aes(x = Year, y = Emissions, color = Industry)) +
geom_line() +
labs(x = "Year", y = "Emissions (Industry)",
color = "Industry",
title="Total Emissions Over the Years by Industry",
caption = "Units: Million metric tons of CO2 equivalent")+
theme(plot.background = element_rect(fill = "#F4F1E8"),  # Set the background color of the plot
legend.background = element_rect(fill = "#F4F1E8")) # Set the background color of the legend
plotly_chart1 <- ggplotly(p1)
#plot all gas types in 1 graph
regions <- unique(new_data$Region)
years <- 2010:2021
#create empty data frame to store the results
combined_data <- data.frame(Year = years)
#loop through each region and add the data to combined_data
for (region in regions) {
#calculate the sums for each year
results <- sapply(years, function(year) {
#filter the data for the specified year and region
filtered_data <- new_data %>%
filter(Region == region) %>%
summarise(Year = as.integer(year), Total_Emissions = sum(get(as.character(year)))
)
})
result <- t(results)
emissions <- as.numeric(result[,"Total_Emissions"])
combined_data[region] <- emissions
}
combined_data_longer <- combined_data %>%
pivot_longer(cols = -Year, names_to = "Region", values_to = "Emissions")
#create the plot
p2 <- ggplot(combined_data_longer, aes(x = Year, y = Emissions, color = Region)) +
geom_line() +
labs(x = "Year", y = "Emissions (Region)",
color = "Region",
title = "Total Emissions Over the Years by Region",
caption = "Units: Million metric tons of CO2 equivalent")+
theme(plot.background = element_rect(fill = "#F4F1E8"),  # Set the background color of the plot
legend.background = element_rect(fill = "#F4F1E8")) # Set the background color of the legend
plotly_chart2 <- ggplotly(p2)
#plot all gas types in 1 graph
regions <- unique(new_data$Region)
years <- 2010:2021
#create empty data frame to store the results
combined_data <- data.frame(Year = years)
#loop through each region and add the data to combined_data
for (region in regions) {
#calculate the sums for each year
results <- sapply(years, function(year) {
#filter the data for the specified year and region
filtered_data <- new_data %>%
filter(Region == region) %>%
summarise(Year = as.integer(year), Total_Emissions = sum(get(as.character(year)))
)
})
result <- t(results)
emissions <- as.numeric(result[,"Total_Emissions"])
combined_data[region] <- emissions
}
combined_data_longer <- combined_data %>%
pivot_longer(cols = -Year, names_to = "Region", values_to = "Emissions")
#create the plot
p2 <- ggplot(combined_data_longer, aes(x = Year, y = Emissions, color = Region)) +
geom_line() +
labs(x = "Year", y = "Emissions (Region)",
color = "Region",
title = "Total Emissions Over the Years by Region",
caption = "Units: Million metric tons of CO2 equivalent")+
theme(plot.background = element_rect(fill = "#F4F1E8"),  # Set the background color of the plot
legend.background = element_rect(fill = "#F4F1E8")) # Set the background color of the legend
plotly_chart2 <- ggplotly(p2)
