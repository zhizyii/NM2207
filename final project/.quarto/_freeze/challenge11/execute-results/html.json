{
  "hash": "b8c75ca0ceaed68df0d1adc35d444b54",
  "result": {
    "markdown": "---\ntitle: \"Challenge 11\"\n---\n\n\n\n\n# Load libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhistoric_state_data_url <- \"https://api.covidactnow.org/v2/states.timeseries.json?apiKey=c85924a8e71d4785aaefb9e3234f18c4\"\nraw_data <- GET(historic_state_data_url)\n```\n:::\n\n\n# Extract data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- fromJSON(rawToChar(raw_data$content))\n```\n:::\n\n\n# Explore data\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 53\nColumns: 25\n$ fips                           <chr> \"02\", \"01\", \"05\", \"04\", \"06\", \"08\", \"09…\n$ country                        <chr> \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US…\n$ state                          <chr> \"AK\", \"AL\", \"AR\", \"AZ\", \"CA\", \"CO\", \"CT…\n$ county                         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ hsa                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ hsaName                        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ level                          <chr> \"state\", \"state\", \"state\", \"state\", \"st…\n$ lat                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ locationId                     <chr> \"iso1:us#iso2:us-ak\", \"iso1:us#iso2:us-…\n$ long                           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ population                     <int> 731545, 4903185, 3017804, 7278717, 3951…\n$ hsaPopulation                  <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ metrics                        <df[,14]> <data.frame[26 x 14]>\n$ riskLevels                     <df[,6]> <data.frame[26 x 6]>\n$ cdcTransmissionLevel           <int> 2, 4, 3, 3, 1, 4, 4, 1, 4, 4, 2, 3,…\n$ communityLevels                <df[,2]> <data.frame[26 x 2]>\n$ actuals                        <df[,19]> <data.frame[26 x 19]>\n$ annotations                    <df[,30]> <data.frame[26 x 30]>\n$ lastUpdatedDate                <chr> \"2023-10-30\", \"2023-10-30\", \"2023-10…\n$ url                            <chr> \"https://covidactnow.org/us/alaska-ak\",…\n$ metricsTimeseries              <list> [<data.frame[1334 x 14]>], [<data.fr…\n$ actualsTimeseries              <list> [<data.frame[1334 x 20]>], [<data.f…\n$ riskLevelsTimeseries           <list> [<data.frame[1334 x 3]>], [<data.fr…\n$ cdcTransmissionLevelTimeseries <list> [<data.frame[1334 x 2]>], [<data.frame[…\n$ communityLevelsTimeseries      <list> [<data.frame[1334 x 3]>], [<data.frame[…\n```\n:::\n:::\n\n\n# Questions\n\n## i. What is the population in various states of U.S.A?\n\n::: {.cell}\n\n```{.r .cell-code}\ndata$population\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]   731545  4903185  3017804  7278717 39512223  5758736  3565287   705749\n [9]   973764 21477737 10617423  1415872  3155070  1787065 12671821  6732219\n[17]  2913314  4467673  4648794  6892503  6045680  1344212  9986857  5639632\n[25]  6137428    53605  2976149  1068778 10488084   762062  1934408  1359711\n[33]  8882190  2096829  3080156 19453561 11689100  3956971  4217737 12801989\n[41]  3193694  1059361  5148714   884659  6829174 28995881  3205958  8535519\n[49]   623989  7614893  5822434  1792147   578759\n```\n:::\n:::\n\n\nplot\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x=state,y=population)) + \n  geom_bar(stat=\"identity\") +\n  labs(x=\"States\",y=\"Population\") + \n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.justification = c(0, 1))\n```\n\n::: {.cell-output-display}\n![](challenge11_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## ii. What fraction of the population was infected ?\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(data$actuals$cases)/sum(data$population)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3154839\n```\n:::\n:::\n\n\nplot\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x=state,y=(data$actuals$cases/population))) + \n  geom_bar(stat=\"identity\") + \n  labs(x=\"States\",y=\"Infected (%)\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.justification = c(0, 1))\n```\n\n::: {.cell-output-display}\n![](challenge11_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## iii. What fraction of infected persons recovered ?\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(data$actuals$cases - data$actuals$deaths)/sum(data$actuals$cases)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9891648\n```\n:::\n:::\n\n\nplot\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x=state,y=((data$actuals$cases-data$actuals$deaths)/data$actuals$cases))) + \n  geom_bar(stat=\"identity\") + \n  labs(x=\"States\",y=\"recovered (%)\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.justification = c(0, 1))\n```\n\n::: {.cell-output-display}\n![](challenge11_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## iv. What fraction of the population is currently vaccinated ?\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(data$actuals$vaccinationsCompleted)/sum(data$population)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n\n\nplot\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x=state,y=((data$actuals$vaccinationsCompleted)/data$population))) + \n  geom_bar(stat=\"identity\") + \n  labs(x=\"States\",y=\"recovered (%)\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.justification = c(0, 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Use of `data$population` is discouraged.\nℹ Use `population` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3 rows containing missing values (`position_stack()`).\n```\n:::\n\n::: {.cell-output-display}\n![](challenge11_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n## v. What was the transmission-like in the various states ?\n\n::: {.cell}\n\n```{.r .cell-code}\ntime_series <- data %>%\n  unnest(actualsTimeseries) \n\n# Creating a new dataframe with needed data\n# Save date\ntime_series_transmission <- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"CA\")]]$date)\n# Transmission levels in each state\ntime_series_transmission$Alaska <- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"AK\")]]$cdcTransmissionLevel\n\ntime_series_transmission$California <- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"CA\")]]$cdcTransmissionLevel\n\ntime_series_transmission$New_Jersey <- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"NJ\")]]$cdcTransmissionLevel\n\ntime_series_transmission$Tennessee <- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"TN\")]]$cdcTransmissionLevel\n\ntime_series_transmission$District_of_Columbia <- time_series$cdcTransmissionLevelTimeseries[[which(data$state==\"DC\")]]$cdcTransmissionLevel\n\nprint(head(time_series_transmission))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  Date       Alaska California New_Jersey Tennessee District_of_Columbia\n  <chr>       <int>      <int>      <int>     <int>                <int>\n1 2020-03-01      0          0          0         0                    0\n2 2020-03-02      0          0          0         0                    0\n3 2020-03-03      0          0          0         0                    0\n4 2020-03-04      0          0          0         0                    0\n5 2020-03-05      0          0          0         0                    0\n6 2020-03-06      0          0          0         0                    0\n```\n:::\n:::\n\n\nplot\n\n::: {.cell}\n\n```{.r .cell-code}\ntime_series_transmission[seq(1,1300,by=100),]%>%\n  pivot_longer(cols=Alaska:District_of_Columbia,names_to=\"Countries\",values_to=\"Transmission\") %>%\n  ggplot(aes(x=Date,y=Transmission,colour=Countries,group=Countries)) +\n  geom_point(show.legend=TRUE) + \n  labs(x=\"Date\",y=\"Transmission Level\") + \n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.justification = c(0, 1))\n```\n\n::: {.cell-output-display}\n![](challenge11_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n## vi. How did the disease progress since it started ? \nit increased at an increasing rate\n\n::: {.cell}\n\n```{.r .cell-code}\n# New data-frame with dates\ntime_series_cases <- list(Alaska = time_series %>% \n                            filter(state==\"AK\") %>% \n                            select(date,cases))\n\n# Cases of each state\n(time_series_cases$California <- time_series %>% \n  filter(state==\"CA\") %>% \n  select(date,cases))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,368 × 2\n   date       cases\n   <chr>      <int>\n 1 2020-01-25     1\n 2 2020-01-26     2\n 3 2020-01-27     2\n 4 2020-01-28     2\n 5 2020-01-29     2\n 6 2020-01-30     2\n 7 2020-01-31     3\n 8 2020-02-01     3\n 9 2020-02-02     6\n10 2020-02-03     6\n# ℹ 1,358 more rows\n```\n:::\n\n```{.r .cell-code}\n(time_series_cases$New_Jersey <- time_series %>% \n  filter(state==\"NJ\") %>% \n  select(date,cases))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,330 × 2\n   date       cases\n   <chr>      <int>\n 1 2020-03-01    NA\n 2 2020-03-02    NA\n 3 2020-03-03    NA\n 4 2020-03-04     1\n 5 2020-03-05     2\n 6 2020-03-06     4\n 7 2020-03-07     4\n 8 2020-03-08     6\n 9 2020-03-09    11\n10 2020-03-10    15\n# ℹ 1,320 more rows\n```\n:::\n\n```{.r .cell-code}\n(time_series_cases$Tennessee <- time_series %>% \n  filter(state==\"TN\") %>% \n  select(date,cases))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,333 × 2\n   date       cases\n   <chr>      <int>\n 1 2020-03-01    NA\n 2 2020-03-02    NA\n 3 2020-03-03    NA\n 4 2020-03-04    NA\n 5 2020-03-05     1\n 6 2020-03-06     1\n 7 2020-03-07     1\n 8 2020-03-08     3\n 9 2020-03-09     4\n10 2020-03-10     7\n# ℹ 1,323 more rows\n```\n:::\n\n```{.r .cell-code}\n(time_series_cases$District_of_Columbia <- time_series %>% \n  filter(state==\"DC\") %>% \n  select(date,cases))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,331 × 2\n   date       cases\n   <chr>      <int>\n 1 2020-03-06    NA\n 2 2020-03-07     1\n 3 2020-03-08     1\n 4 2020-03-09     4\n 5 2020-03-10     4\n 6 2020-03-11    10\n 7 2020-03-12    10\n 8 2020-03-13    10\n 9 2020-03-14    16\n10 2020-03-15    17\n# ℹ 1,321 more rows\n```\n:::\n:::\n\n\ndata to plot\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_to_plot <- tibble(Date_Alaska = time_series_cases$Alaska$date[seq(1,1300,by=100)],\n Cases_Alaska = time_series_cases$Alaska$cases[seq(1,1300,by=100)],\n Date_California = time_series_cases$California$date[seq(1,1300,by=100)],\n Cases_California = time_series_cases$California$cases[seq(1,1300,by=100)],\n Date_New_Jersey = time_series_cases$New_Jersey$date[seq(1,1300,by=100)],\n Cases_New_Jersey = time_series_cases$New_Jersey$cases[seq(1,1300,by=100)],\n Date_Tennessee = time_series_cases$Tennessee$date[seq(1,1300,by=100)],\n Cases_Tennessee = time_series_cases$Tennessee$cases[seq(1,1300,by=100)],\n Date_District_of_Columbia = time_series_cases$District_of_Columbia$date[seq(1,1300,by=100)],\n Cases_District_of_Columbia = time_series_cases$District_of_Columbia$cases[seq(1,1300,by=100)])\n```\n:::\n\n\nplots\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cowplot)\n\nfig1 <- ggplot(data_to_plot, aes(x = Date_Alaska, y = Cases_Alaska)) +\n  geom_point() +\n  labs(x = \"Date\", y = \"Cases\", title = \"Alaska\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 35, hjust = 1), legend.justification = c(0, 1))\n\nfig2 <- ggplot(data_to_plot, aes(x = Date_California, y = Cases_California)) +\n  geom_point() +\n  labs(x = \"Date\", y = \"Cases\", title = \"California\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 35, hjust = 1), legend.justification = c(0, 1))\n\nfig3 <- ggplot(data_to_plot, aes(x = Date_New_Jersey, y = Cases_New_Jersey)) +\n  geom_point() +\n  labs(x = \"Date\", y = \"Cases\", title = \"New Jersey\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 35, hjust = 1), legend.justification = c(0, 1))\n\nfig4 <- ggplot(data_to_plot, aes(x = Date_Tennessee, y = Cases_Tennessee)) +\n  geom_point() +\n  labs(x = \"Date\", y = \"Cases\", title = \"Tennessee\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 35, hjust = 1), legend.justification = c(0, 1))\n\nfig5 <- ggplot(data_to_plot, aes(x = Date_District_of_Columbia, y = Cases_District_of_Columbia)) +\n  geom_point() +\n  labs(x = \"Date\", y = \"Cases\", title = \"District of Columbia\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 35, hjust = 1), legend.justification = c(0, 1))\n\nplot_grid(\n  fig1, fig2, fig3, fig4, fig5,\n  ncol = 2, labels = LETTERS[1:5],\n  align = \"v\", axis = \"lr\"\n)\n```\n:::\n\n\nscreenshot\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"screenshot.jpg\") \n```\n\n::: {.cell-output-display}\n![](screenshot.jpg)\n:::\n:::\n",
    "supporting": [
      "challenge11_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}